<!doctype html>
<html>
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <script src="https://cdn.tailwindcss.com"></script>
  <title>File Manager</title>
  <link href="https://cdn.jsdelivr.net/npm/flowbite@2.5.2/dist/flowbite.min.css" rel="stylesheet" />
  <style>
    @keyframes progress {
      from { background-position: 0 0; }
      to { background-position: 40px 0; }
    }
  </style>
</head>
<body class="bg-gray-100 dark:bg-gray-800 h-screen w-screen flex items-center justify-center">
  <main class="flex flex-col items-center p-6 space-y-6 w-full max-w-2xl">
    

    <div id="globalStatus" class="w-full hidden px-4 py-3 rounded-lg text-sm"></div>

    <h1 class="text-4xl font-extrabold text-gray-900 dark:text-white text-center">File Manager</h1>
    

    <div class="flex gap-3 w-full">
      <input type="text" id="searchInput" placeholder="Search files..." 
             class="flex-grow px-4 py-2.5 rounded-lg border border-gray-300 dark:border-gray-600
                    bg-white dark:bg-gray-700 text-gray-900 dark:text-white
                    focus:ring-2 focus:ring-blue-500 focus:border-blue-500">
      <button onclick="searchFiles()" 
              class="px-6 py-2.5 bg-blue-600 hover:bg-blue-700 text-white rounded-lg
                     transition-all duration-200 transform hover:scale-[1.02]">
        Search
      </button>
    </div>

    <button onclick="showPopup()" 
            class="w-full py-3 bg-gradient-to-br from-purple-600 to-blue-600 text-white 
                   font-medium rounded-lg hover:shadow-lg transition-all duration-200
                   transform hover:scale-[1.01]">
      Upload File
    </button>


    <div id="uploadPopup" class="fixed inset-0 flex items-center justify-center hidden bg-black/50 backdrop-blur-sm transition-all">
      <div class="bg-white dark:bg-gray-700 p-6 rounded-xl shadow-2xl w-96 flex flex-col space-y-4 scale-95 opacity-0 transition-all duration-200" id="popupContent">
        <h2 class="text-xl font-bold text-gray-900 dark:text-white">Upload a File</h2>
        
        <div class="relative group">
          <input id="fileInput" type="file" 
                 class="w-full px-4 py-12 rounded-lg border-2 border-dashed border-gray-300
                        dark:border-gray-600 bg-transparent text-center cursor-pointer
                        hover:border-blue-500 dark:hover:border-blue-500 transition-colors
                        file:mr-4 file:py-2 file:px-4 file:rounded-md
                        file:border-0 file:bg-blue-500 file:text-white file:cursor-pointer">
        </div>
        

        <div class="space-y-2">
          <div class="flex justify-between text-sm text-gray-600 dark:text-gray-400">
            <span>Upload Progress:</span>
            <span id="progressPercentage">0%</span>
          </div>
          <div class="w-full h-3 bg-gray-200 dark:bg-gray-600 rounded-full overflow-hidden">
            <div id="progressBar" class="h-full bg-gradient-to-r from-blue-500 to-purple-500 transition-all duration-300 ease-out" style="width: 0%"></div>
          </div>
        </div>


        <div id="uploadStatus" class="hidden px-4 py-3 rounded-lg text-sm" role="alert">
          <span class="message"></span>
        </div>
        
        <div class="flex justify-between gap-3">
          <button onclick="uploadFile()" class="flex-1 px-4 py-2.5 bg-blue-600 hover:bg-blue-700 text-white rounded-lg transition-colors disabled:opacity-50" id="uploadButton">
            Upload
          </button>
          <button onclick="hidePopup()" class="flex-1 px-4 py-2.5 bg-gray-200 hover:bg-gray-300 dark:bg-gray-600 dark:hover:bg-gray-500 text-gray-800 dark:text-white rounded-lg transition-colors">
            Close
          </button>
        </div>
      </div>
    </div>

    <div class="w-full space-y-3" id="fileList">
      <% files.forEach(function(file){ %>
        <div class="group p-4 bg-white dark:bg-gray-700 rounded-lg shadow-sm hover:shadow-md transition-all duration-200 cursor-pointer file-item" data-file-id="<%= file._id %>">
          <div class="flex items-center justify-between">
            <div class="flex items-center gap-4">
              <span class="file-name text-gray-900 dark:text-white truncate"><%= file.filename %></span>
              <span class="text-sm text-gray-500"><%= (file.size/1024).toFixed(2) %> KB</span>
            </div>
            <button onclick="deleteFile('<%= file._id %>')" class="opacity-0 group-hover:opacity-100 text-gray-400 hover:text-red-500 transition-opacity">
              <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
                <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
              </svg>
            </button>
          </div>
        </div>
      <% }) %>
    </div>
  </main>

  <script>

    async function uploadFile() {
    const fileInput = document.getElementById("fileInput");
    const uploadButton = document.getElementById("uploadButton");

    if (!fileInput.files.length) return showStatus("Please select a file first!", true);

    uploadButton.disabled = true;
    const formData = new FormData();
    formData.append("file", fileInput.files[0]);

    try {
        const xhr = new XMLHttpRequest();
        xhr.open("POST", "/upload-file");
        xhr.setRequestHeader("Authorization", `Bearer ${localStorage.getItem('token')}`);

        xhr.upload.onprogress = (event) => {
            if (event.lengthComputable) {
                const percent = Math.round((event.loaded / event.total) * 100);
                document.getElementById("progressBar").style.width = `${percent}%`;
                document.getElementById("progressPercentage").textContent = `${percent}%`;
            }
        };

        xhr.onload = async () => {
            if (xhr.status === 200) {
                showStatus("File uploaded successfully!");
                await fetchFiles();  // Refresh file list dynamically
                setTimeout(hidePopup, 1500);
            } else {
                showStatus(`Upload failed: ${xhr.statusText}`, true);
            }
            uploadButton.disabled = false;
        };

        xhr.send(formData);
    } catch (error) {
        showStatus(`Error: ${error.message}`, true);
        uploadButton.disabled = false;
    }
}

    // Delete Function
    async function deleteFile(fileId) {
      if (!confirm('Are you sure you want to delete this file?')) return;

      try {
        const response = await fetch(`/delete-file/${fileId}`, {
          method: 'DELETE',
          headers: {
            'Authorization': `Bearer ${localStorage.getItem('token')}`
          }
        });

        const data = await response.json();
        if (response.ok) {
          document.querySelector(`[data-file-id="${fileId}"]`).remove();
          showStatus(data.message);
        } else {
          showStatus(data.error, true);
        }
      } catch (error) {
        showStatus('Failed to delete file', true);
      }
    }

    // Helper Functions
    function addFileToDOM(file) {
      const fileList = document.getElementById('fileList');
      const fileElement = document.createElement('div');
      fileElement.className = 'group p-4 bg-white dark:bg-gray-700 rounded-lg shadow-sm hover:shadow-md transition-all duration-200 cursor-pointer file-item';
      fileElement.dataset.fileId = file._id;
      fileElement.innerHTML = `
        <div class="flex items-center justify-between">
          <div class="flex items-center gap-4">
            <span class="file-name text-gray-900 dark:text-white truncate">${file.filename}</span>
            <span class="text-sm text-gray-500">${(file.size/1024).toFixed(2)} KB</span>
          </div>
          <button onclick="deleteFile('${file._id}')" class="opacity-0 group-hover:opacity-100 text-gray-400 hover:text-red-500 transition-opacity">
            <svg class="w-5 h-5" fill="none" stroke="currentColor" viewBox="0 0 24 24">
              <path stroke-linecap="round" stroke-linejoin="round" stroke-width="2" d="M19 7l-.867 12.142A2 2 0 0116.138 21H7.862a2 2 0 01-1.995-1.858L5 7m5 4v6m4-6v6m1-10V4a1 1 0 00-1-1h-4a1 1 0 00-1 1v3M4 7h16"/>
            </svg>
          </button>
        </div>
      `;
      fileList.prepend(fileElement);
    }

    function showStatus(message, isError = false) {
      const statusElements = [
        document.getElementById('uploadStatus'),
        document.getElementById('globalStatus')
      ];

      statusElements.forEach(element => {
        element.classList.remove('hidden', 'bg-red-100', 'text-red-700', 'bg-green-100', 'text-green-700');
        element.classList.add(isError ? 'bg-red-100 text-red-700' : 'bg-green-100 text-green-700');
        element.querySelector('.message').textContent = message;
        element.classList.remove('hidden');
      });

      setTimeout(() => {
        statusElements.forEach(element => element.classList.add('hidden'));
      }, 3000);
    }

    // Existing UI Functions
    function showPopup() {
      document.getElementById("uploadPopup").classList.remove("hidden");
      setTimeout(() => {
        document.getElementById("popupContent").classList.remove("scale-95", "opacity-0");
      }, 10);
    }

    function hidePopup() {
      const popupContent = document.getElementById("popupContent");
      popupContent.classList.add("scale-95", "opacity-0");
      setTimeout(() => {
        document.getElementById("uploadPopup").classList.add("hidden");
        resetUploadState();
      }, 200);
    }

    function resetUploadState() {
      document.getElementById("fileInput").value = "";
      document.getElementById("progressBar").style.width = "0%";
      document.getElementById("progressPercentage").textContent = "0%";
    }

    function searchFiles() {
      const searchQuery = document.getElementById("searchInput").value.toLowerCase();
      document.querySelectorAll('.file-item').forEach(file => {
        const fileName = file.querySelector('.file-name').textContent.toLowerCase();
        file.style.display = fileName.includes(searchQuery) ? 'block' : 'none';
      });
    }

    // Event Listeners
    document.getElementById("uploadPopup").addEventListener('click', (e) => {
      if (e.target.id === "uploadPopup") hidePopup();
    });

    document.getElementById("searchInput").addEventListener('input', searchFiles);
  </script>
</body>
</html>